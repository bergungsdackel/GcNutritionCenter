<UserControl x:Class="GcNutritionCenter.Balance"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:local="clr-namespace:GcNutritionCenter" xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
            mc:Ignorable="d" 
            d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="#2E333A" BorderThickness="0">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="7" Direction="330" Color="Black" ShadowDepth="4" Opacity="0.3"></DropShadowEffect>
                            </Border.Effect>
                            <ContentPresenter x:Name="cp" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="White"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#8694A3"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="White"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#404D5B"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="White"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#323c47"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="White"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>


    <Grid Background="#9199a3">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <DockPanel HorizontalAlignment="Stretch" Grid.Row="0" Margin="5,10,50,5">
            
            <Button Content="Kunde hinzufügen" Width="120" Height="25" Name="btnAddCustomer"  
                    Command="{Binding AddCustomerCommand}"  />

            <Button Margin="5,0,0,0" Content="Kunde löschen" Width="120" Height="25" Name="btnDeleteCustomer"  
                    Command="{Binding DeleteCustomerCommand}"  />

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <TextBox Name="searchTxtBox" VerticalContentAlignment="Center" Padding="0,0,30,0" Width="200" TextWrapping="NoWrap" Text="{Binding SearchBoxText, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            <i:InvokeCommandAction 
                                        Command="{Binding KeyUpCommand}">
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Button Background="Black" Margin="-30,0,0,0" HorizontalAlignment="Right" Command="{Binding DeleteSearchTextCommand}">
                    <Image Source="../Images/Icons/img_cancel.png" Height="20"/>
                </Button>
            </StackPanel>


        </DockPanel>



        <DataGrid Background="#9199a3" Name="CustomerGrid" Grid.Row="1" Margin="5"  ItemsSource="{Binding ItemsSource}" SelectedItem="{Binding SelectedCustomer}" AutoGenerateColumns="False"
                  ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" CanUserAddRows="False" SelectionMode="Single"
                  HeadersVisibility="Column">

            <DataGrid.Columns>
                <DataGridTextColumn Header="Kundennummer" Binding="{Binding UserID}" Width="Auto" IsReadOnly="True"/>
                <DataGridTextColumn Header="Vorname" Binding="{Binding FirstName}" Width="Auto"/>
                <DataGridTextColumn Header="Nachname" Binding="{Binding LastName}" Width="Auto"/>
                <DataGridTextColumn Header="Guthaben" Binding="{Binding Balance, ConverterCulture='de-DE', StringFormat=C}" Width="*" IsReadOnly="True"/>
            </DataGrid.Columns>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick" >
                    <i:InvokeCommandAction 
                                    Command="{Binding ChangeCustomerBalanceCommand}" CommandParameter="{Binding ElementName=CustomerGrid, Path=CurrentCell}">
                    </i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>

                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}" >
                    <Setter Property="Background" Value="#2E333A" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="BorderThickness" Value="1 1 1 1"/>
                    <Setter Property="Margin" Value="-1,-1,0,0" />
                    <Setter Property="Height" Value="35" />
                    <Setter Property="Padding" Value="10"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}" >
                    
                </Style>
                <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="{x:Type DataGridRow}" >
                    <Setter Property="Background" Value="#7d848c"/>
                    <Setter Property="Height" Value="28"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#404D5B"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="#8694A3"/>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>           

        </DataGrid>

    </Grid>
</UserControl>
